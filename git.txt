#yum install git -y				----- To install git

#git --version					----- To check version

#git config --global user.name <user_name>	----- to add global username for the git

#git config --global user.email <mail ID>	----- to add global mail id

#git config --global color.ui auto		----- color change 

#less /root/.gitconfig				----- to check the global repository for th user name and email id

#mkdir <project name>				----- Create a sample project first

#cd <project name>				----- jump to the project

#git init <project_name>                        ----- creating a new project

#git config --local user.name <user_name>	----- to add local repository 

#git remote add <name> <remote repository ID>   --- to add remote(master) repo

#less .git/config				----- to check the local repository username 

#vi <file>					----- create a sample file (Now that file in the working directory)

#git add <file>					---- we need to add to the staging directory, use this command

#git status					---- to check the status of the files

#git commit -m "<comment>" <file>		---- to add files to the staged directory

#git status					---- to check the status of the files

#git diff					---- to verify any updates happened for the existing files or any new files which are not comitted

#git push -u <name> master			---- push the files to the master reposiroty 

#git log					---- logs to check who commited

#git log --oneline				--- it will show only the id who commited

#git clone <git remote repo>			--- if you want to download the files from the github repo then use this command

branches :

#git branch <branch name>			---- to create a branch

#git branch 					---- it will show the branches

#git branch -D <branch name>			---- to delete the branch

#git checkout <branch name>			---- it will switch to the another branch which we have given

#git merge <branch name>			--- it will merge the two branches which we want to merge (means the files in the another branch will merge the files)

#git rebase <branch name>			--- merge and rebase is same in the funculty wise, but the diff is for example if you want to merge from the master to the branch then use 'merge' and you want to use the branch to master then use 'rebase'
